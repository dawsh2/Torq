name: Task Metadata Validation

on:
  pull_request:
    paths:
      - '.claude/tasks/**/*.md'
      - '.claude/scrum/*.py'
      - '.claude/scrum/task-manager.sh'
  push:
    branches:
      - main
      - develop
    paths:
      - '.claude/tasks/**/*.md'

jobs:
  validate-tasks:
    name: Validate Task Metadata
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          
      - name: Make scripts executable
        run: |
          chmod +x .claude/scrum/*.py
          chmod +x .claude/scrum/task-manager.sh
          
      - name: Run task linter
        run: |
          echo "🔍 Validating all task files..."
          python3 .claude/scrum/task_linter.py lint-dir .claude/tasks/
        continue-on-error: true
        id: lint
        
      - name: Generate health report
        run: |
          echo "📋 Generating task metadata health report..."
          python3 .claude/scrum/task_linter.py report
        if: always()
        
      - name: Check for circular dependencies
        run: |
          echo "🔄 Checking for circular dependencies..."
          python3 .claude/scrum/yaml_parser.py validate
        
      - name: Final validation check
        run: |
          # This will fail the build if there are errors
          python3 .claude/scrum/task_linter.py check
        
      - name: Post comment on PR
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ❌ Task Validation Failed
              
              Some task files have invalid or missing metadata. Please fix the following:
              
              1. Ensure all task files have required fields:
                 - \`task_id\`
                 - \`status\`
                 - \`priority\`
                 - \`depends_on\` (use empty list [] if no dependencies)
                 - \`blocks\` (use empty list [] if nothing blocked)
                 - \`scope\` (use empty list [] if no file modifications)
              
              2. Run locally to identify issues:
              \`\`\`bash
              ./task-manager.sh lint-all
              \`\`\`
              
              3. Fix the issues and push again.
              
              See [DEPENDENCY_SYSTEM.md](.claude/scrum/DEPENDENCY_SYSTEM.md) for more information.`
            })
            
  check-dependencies:
    name: Validate Dependencies Exist
    runs-on: ubuntu-latest
    needs: validate-tasks
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          
      - name: Check dependency references
        run: |
          echo "🔗 Validating that all task dependencies exist..."
          python3 .claude/scrum/task_linter.py lint-dir .claude/tasks/ --strict || true
          
      - name: Generate dependency graph
        run: |
          echo "🗺️ Generating dependency visualization..."
          python3 .claude/scrum/dependency_analyzer.py graph > dependencies.dot
          
      - name: Upload dependency graph
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-graph
          path: dependencies.dot
          
  summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-tasks, check-dependencies]
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "## 📊 Task Validation Summary"
          echo ""
          if [[ "${{ needs.validate-tasks.result }}" == "success" ]]; then
            echo "✅ Task metadata validation: PASSED"
          else
            echo "❌ Task metadata validation: FAILED"
          fi
          
          if [[ "${{ needs.check-dependencies.result }}" == "success" ]]; then
            echo "✅ Dependency validation: PASSED"
          else
            echo "⚠️ Dependency validation: WARNINGS"
          fi