# Torq Pre-Commit Hooks - Architectural Quality Gates
# Ensures code organization, documentation, and architectural integrity

repos:
  # Rust toolchain checks
  - repo: local
    hooks:
      - id: cargo-fmt
        name: Cargo Format
        entry: bash -c 'cd backend_v2 && cargo fmt --all -- --check'
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-clippy
        name: Cargo Clippy
        entry: bash -c 'cd backend_v2 && cargo clippy --workspace --all-targets -- -W clippy::all'
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-test
        name: Cargo Test
        entry: bash -c 'cd backend_v2 && cargo test --workspace --all-targets'
        language: system
        types: [rust]
        pass_filenames: false

  # Architectural integrity checks
  - repo: local
    hooks:
      - id: check-service-boundaries
        name: Service Boundary Validation
        entry: bash -c 'cd backend_v2 && ./scripts/check_service_boundaries.sh'
        language: system
        types: [rust]
        pass_filenames: false

      - id: check-tlv-registry
        name: TLV Type Registry Integrity
        entry: bash -c 'cd backend_v2 && ./scripts/check_tlv_registry.sh'
        language: system
        files: protocol_v2/src/tlv/types.rs

      - id: check-readme-consistency
        name: README Consistency Check
        entry: bash -c 'cd backend_v2 && ./scripts/check_readme_consistency.sh'
        language: system
        files: ^.*/(README\.md|lib\.rs|mod\.rs)$

      - id: validate-project-structure
        name: Project Structure Validation
        entry: bash -c 'cd backend_v2 && ./scripts/validate_project_structure.sh'
        language: system
        types: [rust]
        pass_filenames: false

  # Documentation quality
  - repo: local
    hooks:
      - id: check-missing-docs
        name: Missing Documentation Check
        entry: bash -c 'cd backend_v2 && cargo doc --workspace --document-private-items --no-deps'
        language: system
        types: [rust]
        pass_filenames: false

      - id: sync-claude-agents
        name: Sync Claude Agents to Commands
        entry: bash -c 'cd backend_v2 && ./.claude/sync-agents.sh'
        language: system
        files: ^\.claude/agents/.*\.md$
        pass_filenames: false

      - id: validate-examples
        name: Example Code Validation
        entry: bash -c 'cd backend_v2 && ./scripts/validate_examples.sh'
        language: system
        files: ^(examples/|.*\.md)

  # Code organization
  - repo: local
    hooks:
      - id: check-duplicate-code
        name: Duplicate Code Detection
        entry: bash -c 'cd backend_v2 && ./scripts/check_duplicate_code.sh'
        language: system
        types: [rust]
        pass_filenames: false

      - id: validate-dependencies
        name: Dependency Validation
        entry: bash -c 'cd backend_v2 && ./scripts/validate_dependencies.sh'
        language: system
        files: Cargo.toml

  # Security checks
  - repo: local
    hooks:
      - id: check-secrets
        name: Secret Detection (with exclusions)
        entry: bash -c 'cd backend_v2 && ./scripts/check_secrets.sh'
        language: system
        types: [text]
        pass_filenames: true

  # Git hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
