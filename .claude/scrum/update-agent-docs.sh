#!/bin/bash
# Auto-update scrum-leader.md with current file inventory
# This prevents documentation drift

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
AGENT_FILE="$SCRIPT_DIR/../agents/scrum-leader.md"
TEMP_FILE="$SCRIPT_DIR/../agents/scrum-leader.md.tmp"

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}📝 Updating scrum-leader.md with current file inventory...${NC}"

# Read the current agent file up to the auto-generated section
if grep -q "## 📁 AUTO-GENERATED FILE INVENTORY" "$AGENT_FILE"; then
    # Extract everything before the auto-generated section
    sed '/## 📁 AUTO-GENERATED FILE INVENTORY/,$d' "$AGENT_FILE" > "$TEMP_FILE"
else
    # No auto-generated section yet, keep entire file
    cp "$AGENT_FILE" "$TEMP_FILE"
fi

# Generate the file inventory section
cat >> "$TEMP_FILE" << 'EOF'

## 📁 AUTO-GENERATED FILE INVENTORY
<!-- DO NOT EDIT MANUALLY - Updated by update-agent-docs.sh -->
<!-- Last updated: 
EOF

echo "$(date '+%Y-%m-%d %H:%M:%S') -->" >> "$TEMP_FILE"

cat >> "$TEMP_FILE" << 'EOF'

### Core Scripts (Always check these exist)
```bash
# These scripts MUST exist for the system to function
EOF

# List core scripts
echo "# Location: .claude/scrum/" >> "$TEMP_FILE"
for script in "$SCRIPT_DIR"/*.sh; do
    if [[ -f "$script" ]]; then
        basename "$script" | sed 's/^/- /' >> "$TEMP_FILE"
    fi
done

cat >> "$TEMP_FILE" << 'EOF'
```

### Templates (Use these for standardization)
```bash
# Location: .claude/scrum/templates/
EOF

# List templates
for template in "$SCRIPT_DIR/templates"/*.md; do
    if [[ -f "$template" ]]; then
        basename "$template" | sed 's/^/- /' >> "$TEMP_FILE"
    fi
done

cat >> "$TEMP_FILE" << 'EOF'
```

### Documentation (Reference for details)
```bash
# Location: .claude/scrum/
EOF

# List documentation files
for doc in "$SCRIPT_DIR"/*.md; do
    if [[ -f "$doc" ]]; then
        basename "$doc" | sed 's/^/- /' >> "$TEMP_FILE"
    fi
done

cat >> "$TEMP_FILE" << 'EOF'
```

### Active Sprints
```bash
# Location: .claude/tasks/
EOF

# List active sprints
if [[ -d "$SCRIPT_DIR/../tasks" ]]; then
    for sprint in "$SCRIPT_DIR/../tasks"/sprint-*; do
        if [[ -d "$sprint" ]] && [[ ! "$sprint" == *"archive"* ]]; then
            basename "$sprint" | sed 's/^/- /' >> "$TEMP_FILE"
        fi
    done
else
    echo "- No active sprints" >> "$TEMP_FILE"
fi

cat >> "$TEMP_FILE" << 'EOF'
```

### Archived Sprints
```bash
# Location: .claude/tasks/archive/
EOF

# Count archived sprints
if [[ -d "$SCRIPT_DIR/../tasks/archive" ]]; then
    ARCHIVE_COUNT=$(find "$SCRIPT_DIR/../tasks/archive" -maxdepth 1 -type d -name "sprint-*" | wc -l)
    echo "- Total archived: $ARCHIVE_COUNT sprints" >> "$TEMP_FILE"
else
    echo "- No archived sprints" >> "$TEMP_FILE"
fi

cat >> "$TEMP_FILE" << 'EOF'
```

### Quick Command Reference
```bash
# Sprint Management
./create-sprint.sh 007 "name" "description"  # Create new sprint
./task-manager.sh status                      # Check current status
./task-manager.sh next                        # Get next priority task
./task-manager.sh auto-archive               # Archive completed sprints

# Maintenance
./maintenance.sh                              # Weekly health check
./update-agent-docs.sh                        # Update this documentation

# Templates
cp templates/TASK_TEMPLATE.md ../tasks/sprint-XXX/TASK-001.md
cp templates/TEST_RESULTS.md ../tasks/sprint-XXX/
```

### System Health Check
```bash
# Run this to verify system integrity
for script in task-manager.sh create-sprint.sh maintenance.sh; do
    if [[ -f ".claude/scrum/$script" ]]; then
        echo "✅ $script exists"
    else
        echo "❌ $script MISSING!"
    fi
done
```

## 🔄 Self-Documentation Process

This agent file is **self-documenting**. The file inventory above is automatically generated by:
```bash
./.claude/scrum/update-agent-docs.sh
```

### When to Update
Run the updater whenever you:
1. Add new scripts to `.claude/scrum/`
2. Create new templates
3. Archive sprints
4. Add documentation files
5. Remove obsolete files

### How It Works
1. Scans `.claude/scrum/` for scripts and docs
2. Inventories templates and active sprints
3. Updates this section automatically
4. Preserves manual content above the inventory

### Preventing Documentation Drift
```bash
# Add to weekly maintenance
./.claude/scrum/maintenance.sh
./.claude/scrum/update-agent-docs.sh  # Keep docs current

# Or create a git hook
echo "./.claude/scrum/update-agent-docs.sh" >> .git/hooks/pre-commit
```

This ensures the agent always has an accurate view of available tools and files.
EOF

# Move the temporary file to replace the original
mv "$TEMP_FILE" "$AGENT_FILE"

echo -e "${GREEN}✅ Updated scrum-leader.md with current file inventory${NC}"
echo ""
echo "Files documented:"
echo "  - Scripts: $(ls "$SCRIPT_DIR"/*.sh 2>/dev/null | wc -l)"
echo "  - Templates: $(ls "$SCRIPT_DIR/templates"/*.md 2>/dev/null | wc -l)"
echo "  - Documentation: $(ls "$SCRIPT_DIR"/*.md 2>/dev/null | wc -l)"
echo "  - Active Sprints: $(ls -d "$SCRIPT_DIR/../tasks"/sprint-* 2>/dev/null | grep -v archive | wc -l || echo 0)"
echo ""
echo -e "${YELLOW}Note: Run this script whenever you add/remove files${NC}"